<h3>意味ネットワーク</h3>
<!--<div class="row">
  <div class="col-xs-2">
    <select class="form-control">
      <option>アルカリ金属</option>
      <option>計算機入門 I</option>
    </select>
  </div>
  <input class="btn btn-primary" type="button" onclick="location.reload()" value="Reload"> <br /><br />
</div>-->

<div id="semnet"></div>

<script type="text/javascript">
var nodes = [];

// create an array with nodes
for ( var i in gon.node ) {
  nodes.push({id: (gon.node[i]), label: (gon.node[i]), color: {background: ''}});
  //document.write(gon.node[i]+"<br>");
}
  document.write("<br>");
//nodes.push({id: 'hoge', label: 'hoge', hidden: false});
// create an array with edges
var edges = [];
for (var ent in gon.triad) {
  for ( var val in gon.triad[ent] ) {
    edges.push({from: ent, to: val, label: gon.triad[ent][val], font: {color: ''}});
    //document.write(ent+" "+gon.triad[ent][val]+" "+val+" "+gon.state[ent][val]+"<BR>");
  }
}

if ( gon.role == 0 ) {
  for (var ent in gon.triad) {
    for (var val in gon.triad[ent]) {
      if ( gon.state[ent][val] != "#D9EDF7" ) {
        //document.write(ent+" "+gon.triad[ent][val]+" "+val+"<br>");
        for (var i = 0, l = nodes.length; i < l; i++) {
          //if (nodes[j].id == ent) {
          //  nodes[j].color.background = '#343434';
          //}
          if (nodes[i].id == val) {
            nodes[i].color.background = '#343434';
          } else {
            //nodes[i].color.background = gon.state[ent][val];
          }
        }
        for (var i = 0, l = edges.length; i < l; i++) {
          if (edges[i].to == val) {
            edges[i].font.color = 'white'
          }
        }
      }
    }
  }
}
if ( gon.role == 1 ) {
  for (var ent in gon.triad) {
    for (var val in gon.triad[ent]) {
      for (var i = 0, l = nodes.length; i < l; i++) {
        if (nodes[i].id == val) {
          nodes[i].color.background = gon.state[ent][val];
        }
      }
    }
  }
}
//document.write("<br><br>nodes<br>");
//document.write(JSON.stringify(nodes));
//document.write("<br><br>edges<br>");
//document.write(JSON.stringify(edges));

// create a network
var container = document.getElementById('semnet');
var data = {
  nodes: nodes,
  edges: edges
};
var options = {
nodes: { shape: 'box', font: { size: 25} },
edges: { arrows: 'to', font: { size: 16, align: 'top' } }
};
var network = new vis.Network(container, data, options);

</script>
